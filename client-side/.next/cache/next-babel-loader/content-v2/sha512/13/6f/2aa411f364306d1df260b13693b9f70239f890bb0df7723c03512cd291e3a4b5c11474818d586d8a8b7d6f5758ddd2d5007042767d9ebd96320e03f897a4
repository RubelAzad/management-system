{"ast":null,"code":"var _jsxFileName = \"C:\\\\laragon\\\\www\\\\pos-system\\\\client-side\\\\components\\\\TopicsList.js\";\nvar __jsx = React.createElement;\nimport * as React from \"react\";\nimport { topicsURL } from \"./api\";\n\nfunction TopicsList() {\n  const [topics, setTopics] = React.useState([]);\n  const [loading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState(null);\n  React.useEffect(() => {\n    setLoading(true);\n    fetch(topicsURL).then(response => {\n      if (!response.ok) {\n        throw new Error(\"Request failed\");\n      }\n\n      return response.json();\n    }).then(data => setTopics(data)).catch(e => setError(e)).finally(() => setLoading(false));\n  }, []);\n\n  if (error) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 12\n      }\n    }, \"An error has occurred: \", error.message);\n  }\n\n  if (loading) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n\n  return __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, topics.map(topic => __jsx(\"li\", {\n    key: topic.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    href: topic.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, topic.title), \";\")));\n}","map":{"version":3,"sources":["C:/laragon/www/pos-system/client-side/components/TopicsList.js"],"names":["React","topicsURL","TopicsList","topics","setTopics","useState","loading","setLoading","error","setError","useEffect","fetch","then","response","ok","Error","json","data","catch","e","finally","message","map","topic","id","url","title"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAEA,SAASC,UAAT,GAAsB;AACpB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,KAAK,CAACK,QAAN,CAAe,EAAf,CAA5B;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,KAAK,CAACK,QAAN,CAAe,KAAf,CAA9B;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBT,KAAK,CAACK,QAAN,CAAe,IAAf,CAA1B;AACAL,EAAAA,KAAK,CAACU,SAAN,CAAgB,MAAM;AACpBH,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAI,IAAAA,KAAK,CAACV,SAAD,CAAL,CACGW,IADH,CACQC,QAAQ,IAAI;AAChB,UAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,gBAAV,CAAN;AACD;;AACD,aAAOF,QAAQ,CAACG,IAAT,EAAP;AACD,KANH,EAOGJ,IAPH,CAOQK,IAAI,IAAIb,SAAS,CAACa,IAAD,CAPzB,EAQGC,KARH,CAQSC,CAAC,IAAIV,QAAQ,CAACU,CAAD,CARtB,EASGC,OATH,CASW,MAAMb,UAAU,CAAC,KAAD,CAT3B;AAUD,GAZD,EAYG,EAZH;;AAcA,MAAIC,KAAJ,EAAW;AACT,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAA6BA,KAAK,CAACa,OAAnC,CAAP;AACD;;AACD,MAAIf,OAAJ,EAAa;AACX,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AACD,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,MAAM,CAACmB,GAAP,CAAWC,KAAK,IACf;AAAI,IAAA,GAAG,EAAEA,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,IAAI,EAAED,KAAK,CAACE,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBF,KAAK,CAACG,KAA3B,CADF,MADD,CADH,CADF;AASD","sourcesContent":["import * as React from \"react\"\r\nimport { topicsURL } from \"./api\"\r\n\r\nfunction TopicsList() {\r\n  const [topics, setTopics] = React.useState([])\r\n  const [loading, setLoading] = React.useState(false)\r\n  const [error, setError] = React.useState(null)\r\n  React.useEffect(() => {\r\n    setLoading(true)\r\n    fetch(topicsURL)\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Request failed\")\r\n        }\r\n        return response.json()\r\n      })\r\n      .then(data => setTopics(data))\r\n      .catch(e => setError(e))\r\n      .finally(() => setLoading(false))\r\n  }, [])\r\n\r\n  if (error) {\r\n    return <div>An error has occurred: {error.message}</div>\r\n  }\r\n  if (loading) {\r\n    return <div>Loading...</div>\r\n  }\r\n  return (\r\n    <ul>\r\n      {topics.map(topic => (\r\n        <li key={topic.id}>\r\n          <a href={topic.url}>{topic.title}</a>;\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}